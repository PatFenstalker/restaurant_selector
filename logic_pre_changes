def refresh_listbox(self):
            bottom_frame.after(0, bottom_frame.destroy)

            new_frame = Frame(self, bg='#dc9955', bd=10)
            new_frame.place(relx = 0.5, rely = 0.25, relwidth=0.75, relheight=0.66, anchor='n')

            header_label = Label(new_frame, bg='#e5d6b9', font='Arial', anchor='n', pady=15)
            header_label.place(relx = 0, rely = 0, relwidth = 1, relheight = 1)

            
            in_list = Listbox(new_frame, selectmode = MULTIPLE, activestyle = 'none', width = 25, bg = '#bfb97f',
            selectbackground = '#e5c558', highlightcolor = '#000000', font = 'Arial 12 bold')
            in_list.place(relx = 0.35, rely = 0.2)


            with open('C:\\Users\\pat74648\\OneDrive - Spectrum Health\\Desktop\\Python\\final\\restaurant_database.txt', 'r') as file:
                for line in file:
                    if 'Name: ' in line:
                        in_file_list.append(str(line.strip()[6:]))
            
            num = 0
                
            for item in sorted(set(in_file_list)):
                num += 1
                item_space = '                      ' + item            
                in_list.insert(num, item_space)
            
            back = Button(new_frame, text = 'Back', fg='white', bg='#4e3632', command= lambda: [controller.show_frame(LandingPage), reset(self)])
            back.place(relx = 0.35, rely = 0.85, relwidth = 0.1)

            refresh_btn = Button(new_frame, text = 'Refresh', fg='white', bg='#4e3632', command= lambda: refresh_listbox(self))
            refresh_btn.place(relx = 0.75, rely = 0.85, relwidth = 0.1)

            choose_rest = Button(new_frame, text = 'Choose Restaurant', fg='white', bg='#4e3632', 
            command = lambda: [check_if_selected(self), select_winner(self)])
            choose_rest.place(relx = 0.5, rely = 0.85)




                    def clear_final_selection(self):
            for item in final_selection:
                final_selection.remove(item)
            
            in_list.selection_clear(0, END)

            for item in final_selection:
                print(item)




                for key, value in combined_dict.items():
                for array_num in value:
                    if number == array_num:
                        MessageBox = ctypes.windll.user32.MessageBoxW
                        MessageBox(None, f'{key} is the winner!', 'Winner!', 0)
